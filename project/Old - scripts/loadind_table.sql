 WITH BASE AS (

            SELECT
                PK,
                BOOKING_DATE,
                RN_,
                GROSS_SALES_,
                DATEADD('month',-{last_months},'{m}'::date) AS BREAK,
                LAG(BOOKING_DATE, 1, BOOKING_DATE) OVER (PARTITION BY PK ORDER BY BOOKING_DATE ASC) AS DAY_LAG,
                DATEDIFF('days', DAY_LAG, BOOKING_DATE) AS DIFF_DAYS,
                MIN(BOOKING_DATE) OVER (PARTITION BY PK) AS FIRST_BOOKING_DATE,
                ZEROIFNULL(DATEDIFF('days',FIRST_BOOKING_DATE,BREAK))  AS TIME_FROM_FIRST_BOOKING,

                ROUND(TIME_FROM_FIRST_BOOKING/4) AS SPLIT_TIME,

                CASE WHEN BOOKING_DATE >= DATEADD('day',-1*SPLIT_TIME,BREAK) THEN 'T4'
                     WHEN BOOKING_DATE >= DATEADD('day',-2*SPLIT_TIME,BREAK) THEN 'T3'
                     WHEN BOOKING_DATE >= DATEADD('day',-3*SPLIT_TIME,BREAK) THEN 'T2'
                     ELSE 'T1'
                END AS TIME,

                ROW_NUMBER() OVER (PARTITION BY PK ORDER BY BOOKING_DATE ASC) AS R
            FROM (
                  SELECT
                      CONCAT(ID_CUSTOMER_BRANCH,' | ',CUSTOMER_REPORTING_LEVEL) AS PK,
                      BOOKING_DATE,
                      SUM(RN) AS RN_,
                      SUM(GROSS_SALES) AS GROSS_SALES_
                  FROM HBG_DATASCIENCE.SANDBOX_ANALYTICS.FCT_TRADING_BRANCH
                  WHERE BOOKING_DATE > DATEADD('month',-{months},'{m}'::date) AND BOOKING_DATE <= '{m}'::date
                      AND PK IS NOT NULL
                  GROUP BY 1,2
              )--WHERE PK = '387812/1 | 0012p00003dYiiXAAS' ORDER BY 2
        ),
        DISPUTES AS (
                    SELECT
                        PK,
                        ZEROIFNULL(SUM(BOOKINGS_WITH_CASES_SALES_))                                                         AS BOOKINGS_WITH_CASES_SALES,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-2, BREAK) THEN BOOKINGS_WITH_CASES_SALES_ END))   AS BOOKINGS_WITH_CASES_SALES_L2M,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-12,BREAK) THEN BOOKINGS_WITH_CASES_SALES_ END))   AS BOOKINGS_WITH_CASES_SALES_L12M,

                        ZEROIFNULL(SUM(BOOKINGS_WITH_CASES_OPS_))                                                         AS BOOKINGS_WITH_CASES_OPS,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-2, BREAK) THEN BOOKINGS_WITH_CASES_OPS_ END))   AS BOOKINGS_WITH_CASES_OPS_L2M,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-12,BREAK) THEN BOOKINGS_WITH_CASES_OPS_ END))   AS BOOKINGS_WITH_CASES_OPS_L12M,

                        ZEROIFNULL(SUM(BOOKINGS_WITH_CASES_FINANCE_))                                                         AS BOOKINGS_WITH_CASES_FINANCE,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-2, BREAK) THEN BOOKINGS_WITH_CASES_FINANCE_ END))   AS BOOKINGS_WITH_CASES_FINANCE_L2M,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-12,BREAK) THEN BOOKINGS_WITH_CASES_FINANCE_ END))   AS BOOKINGS_WITH_CASES_FINANCE_L12M,

                        ZEROIFNULL(SUM(DISPUTED_AMOUNT_EUR_CASES_FINANCE_))                                                         AS DISPUTED_AMOUNT_EUR_CASES_FINANCE,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-2, BREAK) THEN DISPUTED_AMOUNT_EUR_CASES_FINANCE_ END))   AS DISPUTED_AMOUNT_EUR_CASES_FINANCE_L2M,
                        ZEROIFNULL(SUM(CASE WHEN DATE >= DATEADD('month',-12,BREAK) THEN DISPUTED_AMOUNT_EUR_CASES_FINANCE_ END))   AS DISPUTED_AMOUNT_EUR_CASES_FINANCE_L12M
                    FROM (
                          SELECT
                                CONCAT(ID_CUSTOMER_BRANCH,' | ',CUSTOMER_REPORTING_LEVEL) AS PK,
                                DATE,
                                DATEADD('month',-{last_months},'{m}'::date) AS BREAK,
                                SUM(BOOKINGS_WITH_CASES_OPS)            AS BOOKINGS_WITH_CASES_SALES_,
                                SUM(BOOKINGS_WITH_CASES_SALES)          AS BOOKINGS_WITH_CASES_OPS_,
                                SUM(BOOKINGS_WITH_CASES_FINANCE)        AS BOOKINGS_WITH_CASES_FINANCE_,
                                SUM(DISPUTED_AMOUNT_EUR_CASES_FINANCE)  AS DISPUTED_AMOUNT_EUR_CASES_FINANCE_
                          FROM HBG_DATASCIENCE.SANDBOX_ANALYTICS.FCT_CHURN_DISPUTES
                          WHERE DATE > DATEADD('month',-{months},'{m}'::date) AND DATE <= BREAK
                          GROUP BY 1,2,3
                    )GROUP BY 1

        ),
        MARKUPS AS (

            select
                PK,
                ZEROIFNULL(AVG(MARKUP_))                                                         AS MARKUP,
                ZEROIFNULL(AVG(CASE WHEN BOOKING_DATE >= DATEADD('month',-2, BREAK) THEN MARKUP_ END))   AS MARKUP_L2M,
                ZEROIFNULL(AVG(CASE WHEN BOOKING_DATE >= DATEADD('month',-12,BREAK) THEN MARKUP_ END))   AS MARKUP_L12M,
                ZEROIFNULL(AVG(CHANNEL_MARKUP_))                                                         AS CHANNEL_MARKUP,
                ZEROIFNULL(AVG(CASE WHEN BOOKING_DATE >= DATEADD('month',-2, BREAK) THEN CHANNEL_MARKUP_ END))   AS CHANNEL_MARKUP_L2M,
                ZEROIFNULL(AVG(CASE WHEN BOOKING_DATE >= DATEADD('month',-12,BREAK) THEN CHANNEL_MARKUP_ END))   AS CHANNEL_MARKUP_L12M

            FROM (
                    select
                            CONCAT(ID_CUSTOMER_BRANCH,' | ',CUSTOMER_REPORTING_LEVEL) AS PK,
                            BOOKING_DATE,
                            MARKUP AS MARKUP_,
                            CHANNEL_MARKUP AS CHANNEL_MARKUP_,
                            DATEADD('month',-2,'2022-03-22'::date) AS BREAK
                    FROM HBG_DATASCIENCE.SANDBOX_ANALYTICS.FCT_CHURN_MARKUPS
                    WHERE BOOKING_DATE > DATEADD('month',-{months},'{m}'::date) AND BOOKING_DATE <= BREAK
                )GROUP BY 1
            ),

        FEATURES AS (
            SELECT
                PK,
                ZEROIFNULL(DATEDIFF('days',MAX(BOOKING_DATE),MAX(BREAK)))   AS TIME_FROM_LAST_BOOKING,

                ZEROIFNULL(COUNT(DISTINCT BOOKING_DATE)) AS DATES,

                ZEROIFNULL(COUNT(DISTINCT CASE WHEN BOOKING_DATE  >= DATEADD('month',-2,BREAK)  THEN BOOKING_DATE END)) AS DATES_L2M,
                ZEROIFNULL(COUNT(DISTINCT CASE WHEN BOOKING_DATE  >= DATEADD('month',-12,BREAK) THEN BOOKING_DATE END)) AS DATES_L12M,
                /*
                ZEROIFNULL(COUNT(DISTINCT CASE WHEN TIME = 'T1' THEN BOOKING_DATE END)) AS DATES_T1,
                ZEROIFNULL(COUNT(DISTINCT CASE WHEN TIME = 'T2' THEN BOOKING_DATE END)) AS DATES_T2,
                ZEROIFNULL(COUNT(DISTINCT CASE WHEN TIME = 'T3' THEN BOOKING_DATE END)) AS DATES_T3,
                ZEROIFNULL(COUNT(DISTINCT CASE WHEN TIME = 'T4' THEN BOOKING_DATE END)) AS DATES_T4,

                --ZEROIFNULL(COUNT(DISTINCT CASE WHEN TIME IN ('T1','T2') THEN BOOKING_DATE END))      AS DATES_T1_T2,
                --ZEROIFNULL(COUNT(DISTINCT CASE WHEN TIME IN ('T1','T2','T3') THEN BOOKING_DATE END)) AS DATES_T1_T2_T3,
                */


                ZEROIFNULL(SUM(RN_))  AS RN,
                ZEROIFNULL(IFF(DATES <> 0 ,RN / DATES,0))           AS RN_BY_BOOKING_DATES,
                ZEROIFNULL(SUM(CASE WHEN BOOKING_DATE >= DATEADD('month',-2, BREAK) THEN RN_ END))  AS RN_L2M,
                ZEROIFNULL(SUM(CASE WHEN BOOKING_DATE >= DATEADD('month',-12,BREAK) THEN RN_ END))  AS RN_L12M,
                /*
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T1' THEN RN_ END))  AS RN_T1,
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T2' THEN RN_ END))  AS RN_T2,
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T3' THEN RN_ END))  AS RN_T3,
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T4' THEN RN_ END))  AS RN_T4,
                ZEROIFNULL(SUM(CASE WHEN TIME IN ('T1','T2') THEN RN_ END))      AS RN_T1_T2,
                ZEROIFNULL(SUM(CASE WHEN TIME IN ('T1','T2','T3') THEN RN_ END)) AS RN_T1_T2_T3,
                */

                ZEROIFNULL(SUM(GROSS_SALES_))     AS GROSS_SALES,
                ZEROIFNULL(IFF(DATES <> 0 ,GROSS_SALES / DATES,0))  AS GROSS_SALES_BY_BOOKING_DATES,
                ZEROIFNULL(SUM(CASE WHEN BOOKING_DATE >= DATEADD('month',-2, BREAK) THEN GROSS_SALES_ END))  AS GROSS_SALES_L2M,
                ZEROIFNULL(SUM(CASE WHEN BOOKING_DATE >= DATEADD('month',-12,BREAK) THEN GROSS_SALES_ END))  AS GROSS_SALES_L12M,
                /*
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T1' THEN GROSS_SALES_ END))  AS GROSS_SALES_T1,
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T2' THEN GROSS_SALES_ END))  AS GROSS_SALES_T2,
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T3' THEN GROSS_SALES_ END))  AS GROSS_SALES_T3,
                ZEROIFNULL(SUM(CASE WHEN TIME = 'T4' THEN GROSS_SALES_ END))  AS GROSS_SALES_T4,
                ZEROIFNULL(SUM(CASE WHEN TIME IN ('T1','T2') THEN GROSS_SALES_ END))      AS GROSS_SALES_T1_T2,
                ZEROIFNULL(SUM(CASE WHEN TIME IN ('T1','T2','T3') THEN GROSS_SALES_ END)) AS GROSS_SALES_T1_T2_T3,
                */

                --ZEROIFNULL(SUM(CASE WHEN DIFF_DAYS > 15 THEN 1 ELSE 0 END)) AS SLOTS_15_NOT_BOOKING,
                --ZEROIFNULL(SUM(CASE WHEN DIFF_DAYS > 30 THEN 1 ELSE 0 END)) AS SLOTS_30_NOT_BOOKING,
                --ZEROIFNULL(SUM(CASE WHEN DIFF_DAYS > 45 THEN 1 ELSE 0 END)) AS SLOTS_45_NOT_BOOKING,
                --ZEROIFNULL(SUM(CASE WHEN DIFF_DAYS > 60 THEN 1 ELSE 0 END)) AS SLOTS_60_NOT_BOOKING,


                ZEROIFNULL(REGR_SLOPE(RN_,R)) AS SLOPE_RN,
                /*
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T1' THEN RN_ END,CASE WHEN TIME = 'T1' THEN R END)) AS SLOPE_RN_T1,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T2' THEN RN_ END,CASE WHEN TIME = 'T2' THEN R END)) AS SLOPE_RN_T2,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T3' THEN RN_ END,CASE WHEN TIME = 'T3' THEN R END)) AS SLOPE_RN_T3,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T4' THEN RN_ END,CASE WHEN TIME = 'T4' THEN R END)) AS SLOPE_RN_T4,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME IN ('T1','T2') THEN RN_ END,CASE WHEN TIME IN ('T1','T2') THEN R END)) AS SLOPE_RN_T1_T2,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME IN ('T1','T2','T3') THEN RN_ END,CASE WHEN TIME IN ('T1','T2','T3') THEN R END)) AS SLOPE_RN_T1_T2_T3,
                */

                ZEROIFNULL(REGR_SLOPE(GROSS_SALES_,R)) AS SLOPE_GROSS_SALES
                /*
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T1' THEN GROSS_SALES_ END,CASE WHEN TIME = 'T1' THEN R END)) AS SLOPE_GROSS_SALES_T1,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T2' THEN GROSS_SALES_ END,CASE WHEN TIME = 'T2' THEN R END)) AS SLOPE_GROSS_SALES_T2,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T3' THEN GROSS_SALES_ END,CASE WHEN TIME = 'T3' THEN R END)) AS SLOPE_GROSS_SALES_T3,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME = 'T4' THEN GROSS_SALES_ END,CASE WHEN TIME = 'T4' THEN R END)) AS SLOPE_GROSS_SALES_T4,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME IN ('T1','T2') THEN GROSS_SALES_ END,CASE WHEN TIME IN ('T1','T2') THEN R END)) AS SLOPE_GROSS_SALES_RN_T1_T2,
                ZEROIFNULL(REGR_SLOPE(CASE WHEN TIME IN ('T1','T2','T3') THEN GROSS_SALES_ END,CASE WHEN TIME IN ('T1','T2','T3') THEN R END)) AS SLOPE_GROSS_SALES_T1_T2_T3
                */
            FROM BASE
            WHERE BOOKING_DATE < BREAK
                GROUP BY 1  HAVING RN > 0 AND GROSS_SALES > 0 AND RN_L12M > 0

        ),--select * from features;,
        LABEL AS (
                SELECT
                    PK,
                    ZEROIFNULL(SUM(CASE WHEN BOOKING_DATE >= BREAK THEN RN_ ELSE 0 END))  AS RN_LXM_TODAY
                FROM BASE
                    GROUP BY 1
        )
            SELECT
                 F.*,
                 DISPUTES.BOOKINGS_WITH_CASES_SALES,
                 DISPUTES.BOOKINGS_WITH_CASES_SALES_L2M,
                 DISPUTES.BOOKINGS_WITH_CASES_SALES_L12M,
                 DISPUTES.BOOKINGS_WITH_CASES_OPS,
                 DISPUTES.BOOKINGS_WITH_CASES_OPS_L2M,
                 DISPUTES.BOOKINGS_WITH_CASES_OPS_L12M,
                 DISPUTES.BOOKINGS_WITH_CASES_FINANCE,
                 DISPUTES.BOOKINGS_WITH_CASES_FINANCE_L2M,
                 DISPUTES.BOOKINGS_WITH_CASES_FINANCE_L12M,
                 DISPUTES.DISPUTED_AMOUNT_EUR_CASES_FINANCE,
                 DISPUTES.DISPUTED_AMOUNT_EUR_CASES_FINANCE_L2M,
                 DISPUTES.DISPUTED_AMOUNT_EUR_CASES_FINANCE_L12M,

                 MARKUPS.MARKUP,
                 MARKUPS.MARKUP_L2M,
                 MARKUPS.MARKUP_L12M,
                 MARKUPS.CHANNEL_MARKUP,
                 MARKUPS.CHANNEL_MARKUP_L2M,
                 MARKUPS.CHANNEL_MARKUP_L12M,

                  CASE WHEN F.RN_L2M = 0          THEN TRUE ELSE FALSE END AS CHURN_L2M,
                  CASE WHEN L.RN_LXM_TODAY = 0    THEN TRUE ELSE FALSE END AS CHURN,

                  CASE WHEN CHURN_L2M     AND CHURN      THEN 'C_L2M__C'
                       WHEN CHURN_L2M     AND NOT CHURN  THEN 'C_L2M__NOT_C'
                       WHEN NOT CHURN_L2M AND CHURN      THEN 'NOT_C_L2M__C'
                       WHEN NOT CHURN_L2M AND NOT CHURN  THEN 'NOT_C_L2M__NOT_C'
                  END AS CHURN_VARIATION,
            '{m}'::date AS ETL

            FROM FEATURES AS F
            INNER JOIN LABEL AS L   ON F.PK = L.PK
            LEFT JOIN DISPUTES      ON F.PK = DISPUTES.PK
            LEFT JOIN MARKUPS       ON F.PK = MARKUPS.PK